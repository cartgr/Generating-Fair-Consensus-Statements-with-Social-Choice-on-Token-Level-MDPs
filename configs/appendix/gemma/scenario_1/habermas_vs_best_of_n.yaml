# NeurIPS Experiment: Gemma - Scenario 1 - Habermas vs Best-of-N
experiment_name: aamas_gemma_scenario1_habermas_vs_bon
seed: 42
num_seeds: 3

# Concurrency Settings
concurrent_execution: true
max_concurrent_methods: 5
api_rate_limit: 60

# Models
models:
  generation_model: "google/gemma-2-9b-it"
  evaluation_models:
    - "google/gemma-2-9b-it"
    - "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo"

# Scenario 1: Genetic code privacy
scenario:
  issue: "Should a person's genetic code be considered private information?"
  agent_opinions:
    Agent 1: "I'd like to think it should be considered private information and for the persons privacy to be respected. However, it may be important for research or for the biological family. If the person is open for it, then their opinion should be respected"
    Agent 2: "A persons genetic code should be considered private information for the sole reason it belongs to them. I can only think of medical case use scenarios when it may be useful to someone else in the case of faulty genes etc being eradicated by using someone else's stem cells or dna to help in this."
    Agent 3: "The majority of all the genetic code is identical between people. I am undecided on the matter, the differences make us different. But by sharing all the genetic code, this may help prevent and cure illnesses so I would be slightly in favour if used appropriately."
    Agent 4: "I believe that a person's genetic code should be considered private information, the same way you wouldn't give out your address or personal information to strangers, it should cover your genetic makeup as well as it could be used to screen out people with specific genetic markers and for discrimination in the future. Having access to your genetic information also has the added risk of being potentially harmful to any offspring in the future and I believe that precaution should be taken to ensure that your genetic code is safe from abuse by others."

# Only run best_of_n and habermas_machine methods
methods_to_run:
  - best_of_n
  - habermas_machine

# Method parameters for Best-of-N
best_of_n:
  n: [1, 3, 5, 10, 20, 50]  # Number of candidates to generate and compare
  max_tokens: 150  # Max length for each candidate statement
  temperature: 1  # Sampling temperature for diversity in candidates
  beta: 1.0  # Reward scaling factor
  log_level: INFO  # Control logging level (e.g., DEBUG, INFO, WARNING)
  api_delay: 0.5  # Delay between API calls (seconds) to avoid rate limits

# Method parameters for Habermas Machine
habermas_machine:
  num_candidates: [1, 3, 5, 10, 20, 50]  # Number of statements to generate and rank
  num_rounds: 1
  num_retries: 2

# Output directory
output_dir: "results/aamas/"